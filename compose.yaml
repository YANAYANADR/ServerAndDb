#services:
#  app:
#    container_name: app
#    build: .
#    ports:
#      - '8000:8000'
#    develop:
#      watch:
#        - action: sync
#          path: .
#          target: .
#    depends_on:
#      db:
#        condition: service_healthy
#
#  db:
#    container_name: db_post
#    image: "postgres:latest"
#    ports:
#      - "5432:5432"
#    #    volumes:
#    #      - postgres_db_vol:/var/lib/postgresql/data
#    environment:
#      #      - POSTGRES_HOST_AUTH_METHOD=trust
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASS=1234
#      - POSTGRES_PASSWORD=1234
#      - POSTGRES_DB=postgres
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 5s
#      timeout: 5s
#      retries: 2

version: '3'
services:
  web:
    build:
      context: .
    container_name: app
    restart: always
    ports:
      - "8000:8000"
    networks:
      - my_network
    depends_on:
      - db

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  pgdata: